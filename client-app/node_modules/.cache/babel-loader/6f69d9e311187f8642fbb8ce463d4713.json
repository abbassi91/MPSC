{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/PDF/EtatQp.tsx\";\nimport React, { useRef } from 'react';\nimport { observer } from 'mobx-react-lite';\n//import  Pdf from 'react-to-pdf';\n//import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n//import ReactPDF from '@react-pdf/renderer';\nimport { useReactToPrint } from 'react-to-print';\nimport { Segment, Button } from 'semantic-ui-react';\n\nclass ComponentToPrint extends React.Component {\n  constructor(props) {\n    super(props);\n    this.stepInput = void 0;\n    this.stepInput = React.createRef();\n  }\n  /*    componentRef = React.createRef<HTMLInputElement>();\n     handlePrint = useReactToPrint({\n      content: ():any => this.componentRef.current,\n    }); */\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      ref: this.stepInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 8\n      }\n    });\n  }\n\n}\n\nconst PdfQp = ({\n  affilie\n}) => {\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n    content: () => componentRef.current\n  });\n  return /*#__PURE__*/React.createElement(Segment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ComponentToPrint, {\n    ref: componentRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handlePrint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, \"Print this out!\"));\n};\n\nexport default observer(PdfQp);","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/PDF/EtatQp.tsx"],"names":["React","useRef","observer","useReactToPrint","Segment","Button","ComponentToPrint","Component","constructor","props","stepInput","createRef","render","PdfQp","affilie","componentRef","handlePrint","content","current"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA;AACA;AACA;AACA,SAASC,eAAT,QAAgC,gBAAhC;AAEA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;;AAKA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CACA;AAGEC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACnB,UAAMA,KAAN;AADmB,SADfC,SACe;AAEnB,SAAKA,SAAL,GAAiBV,KAAK,CAACW,SAAN,EAAjB;AACH;AAEH;;;;;;AAKEC,EAAAA,MAAM,GAAG;AACP,wBAEG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,GAAG,EAAE,KAAKF,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH;AAKD;;AAnBH;;AAyBE,MAAMG,KAAqC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAE3D,QAAMC,YAAY,GAAGd,MAAM,EAA3B;AACA,QAAMe,WAAW,GAAGb,eAAe,CAAC;AAClCc,IAAAA,OAAO,EAAE,MAAUF,YAAY,CAACG;AADE,GAAD,CAAnC;AAKF,sBAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,gBAAD;AAAkB,IAAA,GAAG,EAAEH,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFA,CAFF;AAYD,CApBC;;AAsBF,eAAed,QAAQ,CAACW,KAAD,CAAvB","sourcesContent":["import React, { useRef }  from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { IAffilie } from '../../../app/models/affilie';\n//import  Pdf from 'react-to-pdf';\n//import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n//import ReactPDF from '@react-pdf/renderer';\nimport { useReactToPrint}  from 'react-to-print'\n\nimport { Segment, Button } from 'semantic-ui-react';\n\n\n\n\nclass ComponentToPrint extends React.Component\n{\n\n  private stepInput: React.RefObject<HTMLInputElement>;\n  constructor(props:any) {\n      super(props);\n      this.stepInput = React.createRef();\n  }\n\n/*    componentRef = React.createRef<HTMLInputElement>();\n   handlePrint = useReactToPrint({\n    content: ():any => this.componentRef.current,\n  }); */\n\n  render() {\n    return (\n\n       <input type=\"text\" ref={this.stepInput} />\n\n    );\n  }\n}\n\n\n\n\n  const PdfQp:  React.FC<{affilie: IAffilie}> = ({affilie}) => {\n  \n    const componentRef = useRef();\n    const handlePrint = useReactToPrint({\n      content: ():any => componentRef.current,\n    });\n\n   \n  return (\n\n    <Segment>\n    <ComponentToPrint ref={componentRef}/>\n    <Button onClick={handlePrint}>Print this out!</Button>\n    </Segment>\n\n \n\n  );\n\n\n};\n\nexport default observer(PdfQp);\n"]},"metadata":{},"sourceType":"module"}