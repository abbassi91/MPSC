{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieListItem.tsx\";\nimport React from 'react';\nimport { Card, Image, Icon, Grid, Item } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nconst AffilieListItem = ({\n  affilie\n}) => {\n  //const host = affilie.attendees.filter(x => x.isHost)[0];\n  return React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(Card.Group, {\n    doubling: true,\n    itemsPerRow: 3,\n    stackable: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", affilie.nom, \" \", affilie.prenom), React.createElement(Item.Header, {\n    as: Link,\n    to: \"/affilies/\".concat(affilie.cin),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, affilie.cin), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, affilie.rest > 0 ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"  Rest : \"), React.createElement(\"span\", {\n    className: \"date\",\n    style: {\n      color: \"Red\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, affilie.rest), React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"  Reliquat : \"), React.createElement(\"span\", {\n    className: \"date\",\n    style: {\n      color: \"Red\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, affilie.reliquat)) : React.createElement(\"span\", {\n    className: \"date\",\n    style: {\n      color: \"Green\",\n      fontWeight: \"bold\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, affilie.rest)), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"map marker alternate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), affilie.adresse)), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, format(affilie.dateNaissance, 'EEEE d MMMM yyyy')))))\n  /* \n  <Card.Group doubling itemsPerRow={3} stackable>\n  {_.map(cards, (card) => (\n    <Card key={card.header}>\n      {loading ? (\n        <Placeholder>\n          <Placeholder.Image square />\n        </Placeholder>\n      ) : (\n        <Image src={card.avatar} />\n      )}\n  \n      <Card.Content>\n        {loading ? (\n          <Placeholder>\n            <Placeholder.Header>\n              <Placeholder.Line length='very short' />\n              <Placeholder.Line length='medium' />\n            </Placeholder.Header>\n            <Placeholder.Paragraph>\n              <Placeholder.Line length='short' />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        ) : (\n          <>\n            <Card.Header>{card.header}</Card.Header>\n            <Card.Meta>{card.date}</Card.Meta>\n            <Card.Description>{card.description}</Card.Description>\n          </>\n        )}\n      </Card.Content>\n  \n      <Card.Content extra>\n        <Button disabled={loading} primary>\n          Add\n        </Button>\n        <Button disabled={loading}>Delete</Button>\n      </Card.Content>\n    </Card>\n  ))}\n  </Card.Group> */\n  ;\n};\n\nexport default AffilieListItem;","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieListItem.tsx"],"names":["React","Card","Image","Icon","Grid","Item","format","Link","AffilieListItem","affilie","nom","prenom","cin","rest","color","fontWeight","reliquat","adresse","dateNaissance"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Card,Image, Icon, Grid, Item, Placeholder} from 'semantic-ui-react';\nimport {format} from 'date-fns';\n\n\n\nimport { IAffilie } from '../../../app/models/affilie';\nimport { Link } from 'react-router-dom';\n\nconst AffilieListItem: React.FC<{ affilie: IAffilie }> = ({ affilie }) => {\n  //const host = affilie.attendees.filter(x => x.isHost)[0];\n  return (\n\n\n    <Grid.Column width={10}>\n\n<Card.Group doubling itemsPerRow={3} stackable>\n    <Card>\n    <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png'\n     wrapped ui={false} />\n    <Card.Content>\n    <Card.Header> {affilie.nom} {affilie.prenom}</Card.Header>\n    <Item.Header as={Link} to={`/affilies/${affilie.cin}`}>\n                {affilie.cin}\n      </Item.Header>\n      <Card.Meta>\n      {affilie.rest > 0 ? (\n        <div>\n        <b>  Rest : </b>\n        <span className='date' style={{color: \"Red\" , fontWeight: \"bold\"}}>{affilie.rest}</span>\n          <b>  Reliquat : </b>\n         <span className='date' style={{color: \"Red\" , fontWeight: \"bold\"}}>{affilie.reliquat}</span>\n\n        </div>\n      \n        ) : (\n          <span className='date' style={{color: \"Green\" , fontWeight: \"bold\"}} >{affilie.rest}</span>\n        )}\n\n      </Card.Meta>\n      <Card.Description>\n      <Icon name='map marker alternate' />\n        {affilie.adresse}\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n    \n    {format(affilie.dateNaissance, 'EEEE d MMMM yyyy')} \n      \n    </Card.Content>\n    </Card>\n\n    </Card.Group>\n\n    </Grid.Column>\n    \n\n/* \n<Card.Group doubling itemsPerRow={3} stackable>\n{_.map(cards, (card) => (\n  <Card key={card.header}>\n    {loading ? (\n      <Placeholder>\n        <Placeholder.Image square />\n      </Placeholder>\n    ) : (\n      <Image src={card.avatar} />\n    )}\n\n    <Card.Content>\n      {loading ? (\n        <Placeholder>\n          <Placeholder.Header>\n            <Placeholder.Line length='very short' />\n            <Placeholder.Line length='medium' />\n          </Placeholder.Header>\n          <Placeholder.Paragraph>\n            <Placeholder.Line length='short' />\n          </Placeholder.Paragraph>\n        </Placeholder>\n      ) : (\n        <>\n          <Card.Header>{card.header}</Card.Header>\n          <Card.Meta>{card.date}</Card.Meta>\n          <Card.Description>{card.description}</Card.Description>\n        </>\n      )}\n    </Card.Content>\n\n    <Card.Content extra>\n      <Button disabled={loading} primary>\n        Add\n      </Button>\n      <Button disabled={loading}>Delete</Button>\n    </Card.Content>\n  </Card>\n))}\n</Card.Group> */\n\n\n\n    \n   \n      \n\n\n\n\n  );\n};\n\nexport default AffilieListItem;\n"]},"metadata":{},"sourceType":"module"}