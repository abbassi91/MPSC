{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/app/layout/PrivateRoute.tsx\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { RootStoreContext } from '../stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\nconst PrivateRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    isLoggedIn\n  } = rootStore.userStore;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => isLoggedIn ? /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 45\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 71\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default observer(PrivateRoute);","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/app/layout/PrivateRoute.tsx"],"names":["React","useContext","Route","Redirect","RootStoreContext","observer","PrivateRoute","component","Component","rest","rootStore","isLoggedIn","userStore","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAA0CC,KAA1C,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAMA,MAAMC,YAA8B,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuB,KAAGC;AAA1B,CAAD,KAAqC;AACxE,QAAMC,SAAS,GAAGT,UAAU,CAACG,gBAAD,CAA5B;AACA,QAAM;AAACO,IAAAA;AAAD,MAAeD,SAAS,CAACE,SAA/B;AACA,sBACI,oBAAC,KAAD,oBACQH,IADR;AAEI,IAAA,MAAM,EAAGI,KAAD,IAAWF,UAAU,gBAAG,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBAA6B,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAMH,CATD;;AAWA,eAAeR,QAAQ,CAACC,YAAD,CAAvB","sourcesContent":["import React, { useContext } from 'react'\nimport { RouteProps, RouteComponentProps, Route, Redirect } from 'react-router-dom';\nimport { RootStoreContext } from '../stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\ninterface IProps extends RouteProps {\n    component: React.ComponentType<RouteComponentProps<any>>\n}\n\nconst PrivateRoute: React.FC<IProps> = ({component: Component, ...rest}) => {\n    const rootStore = useContext(RootStoreContext);\n    const {isLoggedIn} = rootStore.userStore;\n    return (\n        <Route \n            {...rest}\n            render={(props) => isLoggedIn ? <Component {...props}/> : <Redirect to='/' />}\n        />\n    )\n}\n\nexport default observer(PrivateRoute)\n"]},"metadata":{},"sourceType":"module"}