{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/testRedux/App/client-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/mac/Desktop/testRedux/App/client-app/src/app/common/photoUpload/PhotoWidgetDropzone.tsx\";\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Icon, Header } from 'semantic-ui-react';\nconst dropzoneStyles = {\n  border: 'dashed 3px',\n  borderColor: '#eee',\n  borderRadius: '5px',\n  paddingTop: '30px',\n  textAlign: 'center',\n  height: '200px'\n};\nconst dropzoneActive = {\n  borderColor: 'green'\n};\n\nconst PhotoWidgetDropzone = ({\n  setFiles\n}) => {\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(acceptedFiles.map(file => Object.assign(file, {\n      preview: URL.createObjectURL(file)\n    })));\n  }, [setFiles]);\n\n  const _useDropzone = useDropzone({\n    onDrop\n  }),\n        getRootProps = _useDropzone.getRootProps,\n        getInputProps = _useDropzone.getInputProps,\n        isDragActive = _useDropzone.isDragActive;\n\n  return React.createElement(\"div\", Object.assign({}, getRootProps(), {\n    style: isDragActive ? _objectSpread({}, dropzoneStyles, dropzoneActive) : dropzoneStyles,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(Icon, {\n    name: \"upload\",\n    size: \"huge\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Header, {\n    content: \"Drop image here\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n};\n\nexport default PhotoWidgetDropzone;","map":{"version":3,"sources":["/Users/mac/Desktop/testRedux/App/client-app/src/app/common/photoUpload/PhotoWidgetDropzone.tsx"],"names":["React","useCallback","useDropzone","Icon","Header","dropzoneStyles","border","borderColor","borderRadius","paddingTop","textAlign","height","dropzoneActive","PhotoWidgetDropzone","setFiles","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","isDragActive"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AAMA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,YADa;AAErBC,EAAAA,WAAW,EAAE,MAFQ;AAGrBC,EAAAA,YAAY,EAAE,KAHO;AAIrBC,EAAAA,UAAU,EAAE,MAJS;AAKrBC,EAAAA,SAAS,EAAE,QALU;AAMrBC,EAAAA,MAAM,EAAE;AANa,CAAvB;AASA,MAAMC,cAAc,GAAG;AACrBL,EAAAA,WAAW,EAAE;AADQ,CAAvB;;AAIA,MAAMM,mBAAqC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC9D,QAAMC,MAAM,GAAGd,WAAW,CAACe,aAAa,IAAI;AAC1CF,IAAAA,QAAQ,CACNE,aAAa,CAACC,GAAd,CAAmBC,IAAD,IAChBC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;AAClBG,MAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;AADS,KAApB,CADF,CADM,CAAR;AAOD,GARyB,EAQvB,CAACJ,QAAD,CARuB,CAA1B;;AAD8D,uBAURZ,WAAW,CAAC;AAAEa,IAAAA;AAAF,GAAD,CAVH;AAAA,QAUtDS,YAVsD,gBAUtDA,YAVsD;AAAA,QAUxCC,aAVwC,gBAUxCA,aAVwC;AAAA,QAUzBC,YAVyB,gBAUzBA,YAVyB;;AAY9D,SACE,6CACMF,YAAY,EADlB;AAEE,IAAA,KAAK,EACHE,YAAY,qBAAQrB,cAAR,EAA2BO,cAA3B,IAA8CP,cAH9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAME,+CAAWoB,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,EAOE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,QAAX;AAAoB,IAAA,IAAI,EAAC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CAxBD;;AA0BA,eAAeZ,mBAAf","sourcesContent":["import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { Icon, Header } from 'semantic-ui-react';\n\ninterface IProps {\n  setFiles: (files: object[]) => void;\n}\n\nconst dropzoneStyles = {\n  border: 'dashed 3px',\n  borderColor: '#eee',\n  borderRadius: '5px',\n  paddingTop: '30px',\n  textAlign: 'center' as 'center',\n  height: '200px'\n};\n\nconst dropzoneActive = {\n  borderColor: 'green'\n};\n\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFiles }) => {\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles(\n      acceptedFiles.map((file: object) =>\n        Object.assign(file, {\n          preview: URL.createObjectURL(file)\n        })\n      )\n    );\n  }, [setFiles]);\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\n      }\n    >\n      <input {...getInputProps()} />\n      <Icon name='upload' size='huge' />\n      <Header content='Drop image here' />\n    </div>\n  );\n};\n\nexport default PhotoWidgetDropzone;\n"]},"metadata":{},"sourceType":"module"}