{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/activities/dashboard/ActivityFilters.tsx\";\nimport React, { Fragment, useContext } from 'react';\nimport { Menu, Header } from 'semantic-ui-react';\nimport { Calendar } from 'react-widgets';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\nconst ActivityFilters = () => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$activitySt = rootStore.activityStore,\n        predicate = _rootStore$activitySt.predicate,\n        setPredicate = _rootStore$activitySt.setPredicate;\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    vertical: true,\n    size: 'large',\n    style: {\n      width: '100%',\n      marginTop: 50\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Header, {\n    icon: 'filter',\n    attached: true,\n    color: 'teal',\n    content: 'Filters',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    active: predicate.size === 0,\n    onClick: () => setPredicate('all', 'true'),\n    color: 'blue',\n    name: 'all',\n    content: 'All Activities',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    active: predicate.has('isGoing'),\n    onClick: () => setPredicate('isGoing', 'true'),\n    color: 'blue',\n    name: 'username',\n    content: \"I'm Going\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Menu.Item, {\n    active: predicate.has('isHost'),\n    onClick: () => setPredicate('isHost', 'true'),\n    color: 'blue',\n    name: 'host',\n    content: \"I'm hosting\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Header, {\n    icon: 'calendar',\n    attached: true,\n    color: 'teal',\n    content: 'Select Date',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Calendar, {\n    onChange: date => setPredicate('startDate', date),\n    value: predicate.get('startDate') || new Date(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }));\n};\n\nexport default observer(ActivityFilters);","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/activities/dashboard/ActivityFilters.tsx"],"names":["React","Fragment","useContext","Menu","Header","Calendar","RootStoreContext","observer","ActivityFilters","rootStore","activityStore","predicate","setPredicate","width","marginTop","size","has","date","get","Date"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAEA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,SAAS,GAAGP,UAAU,CAACI,gBAAD,CAA5B;AAD4B,gCAEQG,SAAS,CAACC,aAFlB;AAAA,QAEpBC,SAFoB,yBAEpBA,SAFoB;AAAA,QAETC,YAFS,yBAETA,YAFS;AAG5B,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,QAAQ,MAAd;AAAe,IAAA,IAAI,EAAE,OAArB;AAA8B,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE,MAAT;AAAiBC,MAAAA,SAAS,EAAE;AAA5B,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,QAAd;AAAwB,IAAA,QAAQ,MAAhC;AAAiC,IAAA,KAAK,EAAE,MAAxC;AAAgD,IAAA,OAAO,EAAE,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAEH,SAAS,CAACI,IAAV,KAAmB,CAD7B;AAEE,IAAA,OAAO,EAAE,MAAMH,YAAY,CAAC,KAAD,EAAQ,MAAR,CAF7B;AAGE,IAAA,KAAK,EAAE,MAHT;AAIE,IAAA,IAAI,EAAE,KAJR;AAKE,IAAA,OAAO,EAAE,gBALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAED,SAAS,CAACK,GAAV,CAAc,SAAd,CADV;AAEE,IAAA,OAAO,EAAE,MAAMJ,YAAY,CAAC,SAAD,EAAY,MAAZ,CAF7B;AAGE,IAAA,KAAK,EAAE,MAHT;AAIE,IAAA,IAAI,EAAE,UAJR;AAKE,IAAA,OAAO,EAAE,WALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE,oBAAC,IAAD,CAAM,IAAN;AACE,IAAA,MAAM,EAAED,SAAS,CAACK,GAAV,CAAc,QAAd,CADV;AAEE,IAAA,OAAO,EAAE,MAAMJ,YAAY,CAAC,QAAD,EAAW,MAAX,CAF7B;AAGE,IAAA,KAAK,EAAE,MAHT;AAIE,IAAA,IAAI,EAAE,MAJR;AAKE,IAAA,OAAO,EAAE,aALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CADF,EAyBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAE,UADR;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,KAAK,EAAE,MAHT;AAIE,IAAA,OAAO,EAAE,aAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA+BE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEK,IAAI,IAAIL,YAAY,CAAC,WAAD,EAAcK,IAAd,CADhC;AAEE,IAAA,KAAK,EAAEN,SAAS,CAACO,GAAV,CAAc,WAAd,KAA8B,IAAIC,IAAJ,EAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA/BF,CADF;AAsCD,CAzCD;;AA2CA,eAAeZ,QAAQ,CAACC,eAAD,CAAvB","sourcesContent":["import React, { Fragment, useContext } from 'react';\nimport { Menu, Header } from 'semantic-ui-react';\nimport { Calendar } from 'react-widgets';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport { observer } from 'mobx-react-lite';\n\nconst ActivityFilters = () => {\n  const rootStore = useContext(RootStoreContext);\n  const { predicate, setPredicate } = rootStore.activityStore;\n  return (\n    <Fragment>\n      <Menu vertical size={'large'} style={{ width: '100%', marginTop: 50 }}>\n        <Header icon={'filter'} attached color={'teal'} content={'Filters'} />\n        <Menu.Item\n          active={predicate.size === 0}\n          onClick={() => setPredicate('all', 'true')}\n          color={'blue'}\n          name={'all'}\n          content={'All Activities'}\n        />\n        <Menu.Item\n          active={predicate.has('isGoing')}\n          onClick={() => setPredicate('isGoing', 'true')}\n          color={'blue'}\n          name={'username'}\n          content={\"I'm Going\"}\n        />\n        <Menu.Item\n          active={predicate.has('isHost')}\n          onClick={() => setPredicate('isHost', 'true')}\n          color={'blue'}\n          name={'host'}\n          content={\"I'm hosting\"}\n        />\n      </Menu>\n      <Header\n        icon={'calendar'}\n        attached\n        color={'teal'}\n        content={'Select Date'}\n      />\n      <Calendar\n        onChange={date => setPredicate('startDate', date!)}\n        value={predicate.get('startDate') || new Date()}\n      />\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityFilters);\n"]},"metadata":{},"sourceType":"module"}