{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/testRedux/App/client-app/src/features/activities/details/ActivityDetailedChat.tsx\";\nimport React, { Fragment, useContext, useEffect } from 'react';\nimport { Segment, Header, Form, Button, Comment } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport { Form as FinalForm, Field } from 'react-final-form';\nimport { Link } from 'react-router-dom';\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\nimport { observer } from 'mobx-react-lite';\nimport { formatDistance } from 'date-fns';\n\nconst ActivityDetailedChat = () => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$activitySt = rootStore.activityStore,\n        createHubConnection = _rootStore$activitySt.createHubConnection,\n        stopHubConnection = _rootStore$activitySt.stopHubConnection,\n        addComment = _rootStore$activitySt.addComment,\n        activity = _rootStore$activitySt.activity;\n  useEffect(() => {\n    createHubConnection();\n    return () => {\n      stopHubConnection();\n    };\n  }, [createHubConnection, stopHubConnection]);\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Segment, {\n    textAlign: \"center\",\n    attached: \"top\",\n    inverted: true,\n    color: \"teal\",\n    style: {\n      border: 'none'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Chat about this event\")), React.createElement(Segment, {\n    attached: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Comment.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, activity && activity.comments && activity.comments.map(comment => React.createElement(Comment, {\n    key: comment.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Comment.Avatar, {\n    src: comment.image || '/assets/user.png',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Comment.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Comment.Author, {\n    as: Link,\n    to: \"/profile/\".concat(comment.username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, comment.displayName), React.createElement(Comment.Metadata, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, formatDistance(comment.createdAt, new Date()))), React.createElement(Comment.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, comment.body)))), React.createElement(FinalForm, {\n    onSubmit: addComment,\n    render: ({\n      handleSubmit,\n      submitting,\n      form\n    }) => React.createElement(Form, {\n      onSubmit: () => handleSubmit().then(() => form.reset()),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"body\",\n      component: TextAreaInput,\n      rows: 2,\n      placeholder: \"Add your comment\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Button, {\n      loading: submitting,\n      content: \"Add Reply\",\n      labelPosition: \"left\",\n      icon: \"edit\",\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))));\n};\n\nexport default observer(ActivityDetailedChat);","map":{"version":3,"sources":["/Users/mac/Desktop/testRedux/App/client-app/src/features/activities/details/ActivityDetailedChat.tsx"],"names":["React","Fragment","useContext","useEffect","Segment","Header","Form","Button","Comment","RootStoreContext","FinalForm","Field","Link","TextAreaInput","observer","formatDistance","ActivityDetailedChat","rootStore","activityStore","createHubConnection","stopHubConnection","addComment","activity","border","comments","map","comment","id","image","username","displayName","createdAt","Date","body","handleSubmit","submitting","form","then","reset"],"mappings":"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","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport { Segment, Header, Form, Button, Comment } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport {Form as FinalForm, Field} from 'react-final-form';\nimport { Link } from 'react-router-dom';\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\nimport { observer } from 'mobx-react-lite';\nimport {formatDistance} from 'date-fns';\n\nconst ActivityDetailedChat = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    createHubConnection,\n    stopHubConnection,\n    addComment,\n    activity\n  } = rootStore.activityStore;\n\n  useEffect(() => {\n    createHubConnection();\n    return () => {\n      stopHubConnection();\n    }\n  }, [createHubConnection, stopHubConnection])\n\n  return (\n    <Fragment>\n      <Segment\n        textAlign='center'\n        attached='top'\n        inverted\n        color='teal'\n        style={{ border: 'none' }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached>\n        <Comment.Group>\n          {activity && activity.comments && activity.comments.map((comment) => (\n          <Comment key={comment.id}>\n          <Comment.Avatar src={comment.image || '/assets/user.png'} />\n          <Comment.Content>\n            <Comment.Author as={Link} to={`/profile/${comment.username}`}>{comment.displayName}</Comment.Author>\n            <Comment.Metadata>\n              <div>{formatDistance(comment.createdAt, new Date())}</div>\n            </Comment.Metadata>\n            <Comment.Text>{comment.body}</Comment.Text>\n          </Comment.Content>\n        </Comment>\n          ))}\n\n          <FinalForm \n            onSubmit={addComment}\n            render={({handleSubmit, submitting, form}) => (\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\n              <Field \n                name='body'\n                component={TextAreaInput}\n                rows={2}\n                placeholder='Add your comment'\n              />\n              <Button\n                loading={submitting}\n                content='Add Reply'\n                labelPosition='left'\n                icon='edit'\n                primary\n              />\n            </Form>\n            )}\n          />\n\n        </Comment.Group>\n      </Segment>\n    </Fragment>\n  );\n};\n\nexport default observer(ActivityDetailedChat);\n"]},"metadata":{},"sourceType":"module"}