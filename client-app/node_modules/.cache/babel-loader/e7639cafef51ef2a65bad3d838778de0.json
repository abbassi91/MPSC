{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/profiles/ProfileFollowings.tsx\";\nimport React, { useContext } from 'react';\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileCard from './ProfileCard';\n\nconst ProfileFollowings = () => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$profileSto = rootStore.profileStore,\n        profile = _rootStore$profileSto.profile,\n        followings = _rootStore$profileSto.followings,\n        loading = _rootStore$profileSto.loading,\n        activeTab = _rootStore$profileSto.activeTab;\n  return React.createElement(Tab.Pane, {\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Header, {\n    floated: \"left\",\n    icon: \"user\",\n    content: activeTab === 3 ? \"People following \".concat(profile.displayName) : \"People \".concat(profile.displayName, \" is following\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card.Group, {\n    itemsPerRow: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, followings.map(profile => React.createElement(ProfileCard, {\n    key: profile.username,\n    profile: profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))))));\n};\n\nexport default ProfileFollowings;","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/profiles/ProfileFollowings.tsx"],"names":["React","useContext","Tab","Grid","Header","Card","RootStoreContext","ProfileCard","ProfileFollowings","rootStore","profileStore","profile","followings","loading","activeTab","displayName","map","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,IAA5B,QAAwC,mBAAxC;AACA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,iBAAiB,GAAG,MAAM;AAC9B,QAAMC,SAAS,GAAGR,UAAU,CAACK,gBAAD,CAA5B;AAD8B,gCAO1BG,SAAS,CAACC,YAPgB;AAAA,QAG5BC,OAH4B,yBAG5BA,OAH4B;AAAA,QAI5BC,UAJ4B,yBAI5BA,UAJ4B;AAAA,QAK5BC,OAL4B,yBAK5BA,OAL4B;AAAA,QAM5BC,SAN4B,yBAM5BA,SAN4B;AAS9B,SACE,oBAAC,GAAD,CAAK,IAAL;AAAU,IAAA,OAAO,EAAED,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,OAAO,EACLC,SAAS,KAAK,CAAd,8BACwBH,OAAO,CAAEI,WADjC,qBAEcJ,OAAO,CAAEI,WAFvB,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAYE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,WAAW,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,UAAU,CAACI,GAAX,CAAeL,OAAO,IACrB,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAEA,OAAO,CAACM,QAA1B;AAAoC,IAAA,OAAO,EAAEN,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CADF,CAZF,CADF,CADF;AAwBD,CAjCD;;AAmCA,eAAeH,iBAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileCard from './ProfileCard';\n\nconst ProfileFollowings = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    followings,\n    loading,\n    activeTab\n  } = rootStore.profileStore;\n\n  return (\n    <Tab.Pane loading={loading}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={\n              activeTab === 3\n                ? `People following ${profile!.displayName}`\n                : `People ${profile!.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={5}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default ProfileFollowings;\n"]},"metadata":{},"sourceType":"module"}