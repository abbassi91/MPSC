{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/details/AffilieDetails.tsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport AffilieDetailedInfo from './AffilieDetailedInfo';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport Pdf from '../PDF/EtatQp';\nimport { Grid } from 'semantic-ui-react';\n\nconst AffilieyDetails = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    affilie,\n    loadAffilie,\n    loadingInitial\n  } = rootStore.affilieStore;\n  useEffect(() => {\n    loadAffilie(match.params.cin);\n  }, [loadAffilie, match.params.cin, history]);\n  if (loadingInitial) return /*#__PURE__*/React.createElement(LoadingComponent, {\n    content: \"Chargement Affilies...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 30\n    }\n  });\n  if (!affilie) return /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 24\n    }\n  }, \"Affilie not found\");\n  return /*#__PURE__*/React.createElement(Grid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AffilieDetailedInfo, {\n    affilie: affilie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(Pdf, {\n    affilie: affilie,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }\n  }), \", `$\", __dirname, \"/example.pdf`);\");\n};\n\nexport default observer(AffilieyDetails);","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/details/AffilieDetails.tsx"],"names":["React","useContext","useEffect","observer","LoadingComponent","AffilieDetailedInfo","RootStoreContext","Pdf","Grid","AffilieyDetails","match","history","rootStore","affilie","loadAffilie","loadingInitial","affilieStore","params","cin","__dirname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,OAAOC,gBAAP,MAA6B,sCAA7B;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAMA,MAAMC,eAA4D,GAAG,CAAC;AACpEC,EAAAA,KADoE;AAEpEC,EAAAA;AAFoE,CAAD,KAG/D;AACJ,QAAMC,SAAS,GAAGX,UAAU,CAACK,gBAAD,CAA5B;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA;AAAxB,MAA2CH,SAAS,CAACI,YAA3D;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,WAAW,CAACJ,KAAK,CAACO,MAAN,CAAaC,GAAd,CAAX;AACD,GAFQ,EAEN,CAACJ,WAAD,EAAcJ,KAAK,CAACO,MAAN,CAAaC,GAA3B,EAAgCP,OAAhC,CAFM,CAAT;AAIA,MAAII,cAAJ,EAAoB,oBAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,wBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEpB,MAAI,CAACF,OAAL,EAAc,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AAEd,sBAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACG,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEA,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,eAEG,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAEA,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,UAEgCM,SAFhC,oBAFF;AAYD,CA3BD;;AA6BA,eAAehB,QAAQ,CAACM,eAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { RouteComponentProps } from 'react-router';\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\nimport AffilieDetailedInfo from './AffilieDetailedInfo';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport Pdf from '../PDF/EtatQp'\nimport { Grid } from 'semantic-ui-react';\n\ninterface DetailParams {\n  cin: string;\n}\n\nconst AffilieyDetails: React.FC<RouteComponentProps<DetailParams>> = ({\n  match,\n  history\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const { affilie, loadAffilie, loadingInitial } = rootStore.affilieStore;\n\n  useEffect(() => {\n    loadAffilie(match.params.cin);\n  }, [loadAffilie, match.params.cin, history]);\n\n  if (loadingInitial) return <LoadingComponent content='Chargement Affilies...' />;\n\n  if (!affilie) return <h2>Affilie not found</h2>;\n\n  return (\n\n    <Grid>\n       <AffilieDetailedInfo affilie={affilie} />\n       <Pdf affilie={affilie}/>, `${__dirname}/example.pdf`);\n\n\n    </Grid>\n\n \n \n  );\n};\n\nexport default observer(AffilieyDetails);\n"]},"metadata":{},"sourceType":"module"}