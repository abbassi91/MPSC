{"ast":null,"code":"import _initializerDefineProperty from \"/Users/abdelilah/Desktop/App/client-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/abdelilah/Desktop/App/client-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/abdelilah/Desktop/App/client-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _dec, _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _temp;\n\nimport { observable, action, computed, runInAction, reaction } from 'mobx';\nimport agent from '../api/agent';\nimport { setAffilieProps } from '../common/util/util';\nconst LIMIT = 10;\nlet AffilieStore = (_dec = observable.ref, (_class = (_temp = class AffilieStore {\n  constructor(rootStore) {\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"affilieRegistry\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"affilie\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"loadingInitial\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"submitting\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"target\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"loading\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"hubConnection\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"affilieCount\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"page\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"predicate\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"setPredicate\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"setPage\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"loadAffilies\", _descriptor13, this);\n\n    this.rootStore = rootStore;\n    reaction(() => this.predicate.keys(), () => {\n      this.page = 0;\n      this.affilieRegistry.clear();\n      this.loadAffilies();\n    });\n  }\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('limit', String(LIMIT));\n    params.append('offset', \"\".concat(this.page ? this.page * LIMIT : 0));\n    return params;\n  }\n\n  get totalPages() {\n    return Math.ceil(this.affilieCount / LIMIT);\n  }\n\n  get affiliesByDate() {\n    return this.groupAffiliesByDate(Array.from(this.affilieRegistry.values()));\n  }\n\n  groupAffiliesByDate(affilies) {\n    const sortedAffilies = affilies.sort((a, b) => a.dateNaissance.getTime() - b.dateNaissance.getTime());\n    return Object.entries(sortedAffilies.reduce((affilies, affilie) => {\n      const date = affilie.dateNaissance.toISOString().split('T')[0];\n      affilies[date] = affilies[date] ? [...affilies[date], affilie] : [affilie];\n      return affilies;\n    }, {}));\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"affilieRegistry\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return new Map();\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"affilie\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"loadingInitial\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"submitting\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"target\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return '';\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"hubConnection\", [_dec], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"affilieCount\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"page\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"predicate\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return new Map();\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"setPredicate\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return (predicate, value) => {\n      this.predicate.clear();\n\n      if (predicate !== 'all') {\n        this.predicate.set(predicate, value);\n      }\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"axiosParams\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"axiosParams\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"totalPages\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"totalPages\"), _class.prototype), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"setPage\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return page => {\n      this.page = page;\n    };\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"affiliesByDate\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"affiliesByDate\"), _class.prototype), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"loadAffilies\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async () => {\n      this.loadingInitial = true;\n\n      try {\n        const affiliesEnvelope = await agent.Affilies.list(this.axiosParams);\n        const affilies = affiliesEnvelope.affilies,\n              affilieCount = affiliesEnvelope.affilieCount;\n        runInAction('loading affilies', () => {\n          affilies.forEach(affilie => {\n            setAffilieProps(affilie);\n            this.affilieRegistry.set(affilie.cin, affilie);\n          });\n          this.affilieCount = affilieCount;\n          this.loadingInitial = false;\n        });\n      } catch (error) {\n        runInAction('load affilies error', () => {\n          this.loadingInitial = false;\n        });\n      }\n    };\n  }\n})), _class));\nexport { AffilieStore as default };","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/app/stores/affiliesStore.ts"],"names":["observable","action","computed","runInAction","reaction","agent","setAffilieProps","LIMIT","AffilieStore","ref","constructor","rootStore","predicate","keys","page","affilieRegistry","clear","loadAffilies","axiosParams","params","URLSearchParams","append","String","totalPages","Math","ceil","affilieCount","affiliesByDate","groupAffiliesByDate","Array","from","values","affilies","sortedAffilies","sort","a","b","dateNaissance","getTime","Object","entries","reduce","affilie","date","toISOString","split","Map","value","set","loadingInitial","affiliesEnvelope","Affilies","list","forEach","cin","error"],"mappings":"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","sourcesContent":["import { observable, action, computed, runInAction, reaction } from 'mobx';\n\nimport agent from '../api/agent';\nimport { RootStore } from './rootStore';\nimport { setAffilieProps } from '../common/util/util';\nimport { HubConnection } from '@aspnet/signalr';\nimport { IAffilie } from '../models/affilie';\n\nconst LIMIT = 10;\n\nexport default class AffilieStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.page = 0;\n        this.affilieRegistry.clear();\n        this.loadAffilies();\n      }\n    )\n  }\n\n  @observable affilieRegistry = new Map();\n  @observable affilie: IAffilie | null = null;\n  @observable loadingInitial = false;\n  @observable submitting = false;\n  @observable target = '';\n  @observable loading = false;\n  @observable.ref hubConnection: HubConnection | null = null;\n  @observable affilieCount = 0;\n  @observable page = 0;\n  @observable predicate = new Map();\n\n  @action setPredicate = (predicate: string, value: string | Date) => {\n    this.predicate.clear();\n    if (predicate !== 'all') {\n      this.predicate.set(predicate, value);\n    }\n  }\n\n  @computed get axiosParams() {\n    const params = new URLSearchParams();\n    params.append('limit', String(LIMIT));\n    params.append('offset', `${this.page ? this.page * LIMIT : 0}`);\n\n    return params;\n  }\n\n  @computed get totalPages() {\n    return Math.ceil(this.affilieCount / LIMIT);\n  }\n\n  @action setPage = (page: number) => {\n    this.page = page;\n  }\n\n\n\n  @computed get affiliesByDate() {\n    return this.groupAffiliesByDate(\n      Array.from(this.affilieRegistry.values())\n    );\n  }\n\n  groupAffiliesByDate(affilies: IAffilie[]) {\n    const sortedAffilies = affilies.sort(\n      (a, b) => a.dateNaissance.getTime() - b.dateNaissance.getTime()\n    );\n    return Object.entries(\n      sortedAffilies.reduce(\n        (affilies, affilie) => {\n          const date = affilie.dateNaissance.toISOString().split('T')[0];\n          affilies[date] = affilies[date]\n            ? [...affilies[date], affilie]\n            : [affilie];\n          return affilies;\n        },\n        {} as { [key: string]: IAffilie[] }\n      )\n    );\n  }\n\n  @action loadAffilies = async () => {\n    this.loadingInitial = true;\n    try {\n      const affiliesEnvelope = await agent.Affilies.list(this.axiosParams);\n      const {affilies, affilieCount} = affiliesEnvelope;\n  \n      runInAction('loading affilies', () => {\n        affilies.forEach(affilie => {\n          setAffilieProps(affilie);\n          this.affilieRegistry.set(affilie.cin, affilie);\n         \n        });\n        this.affilieCount = affilieCount;\n        this.loadingInitial = false;\n      });\n    } catch (error) {\n      runInAction('load affilies error', () => {\n        this.loadingInitial = false;\n      });\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n}\n"]},"metadata":{},"sourceType":"module"}