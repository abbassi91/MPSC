{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieDashboard.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Input } from 'semantic-ui-react';\nimport AffilieList from './AffilieList';\nimport { observer } from 'mobx-react-lite';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport AffilieListItemPlaceholder from './AffilieListItemPlaceholder';\n\nconst AffilieDashboard = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadAffilies,\n    loadingInitial,\n    setPage,\n    page,\n    totalPages,\n    setCin\n  } = rootStore.affilieStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPage(page + 1);\n    loadAffilies().then(() => setLoadingNext(false));\n  };\n\n  useEffect(() => {\n    loadAffilies();\n  }, [loadAffilies]);\n\n  const load = event => {\n    if (event.key === \"Enter\") {\n      setLoadingNext(true);\n      setPage(0);\n      loadAffilies().then(() => setLoadingNext(false));\n      var field = document.createElement('input');\n      field.setAttribute('type', 'text');\n      document.body.appendChild(field);\n      setTimeout(function () {\n        field.focus();\n        setTimeout(function () {\n          field.setAttribute('style', 'display:none;');\n        }, 1);\n      }, 1);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    stackable: true,\n    columns: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    placeholder: \"Search...\",\n    onChange: e => setCin(e.target.value),\n    onKeyDown: e => load(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, loadingInitial && page === 0 ? /*#__PURE__*/React.createElement(AffilieListItemPlaceholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: handleGetNext,\n    hasMore: !loadingNext && page + 1 < totalPages,\n    initialLoad: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AffilieList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), page > 0 ? /*#__PURE__*/React.createElement(AffilieListItemPlaceholder, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }) : null), /*#__PURE__*/React.createElement(Grid.Column, {\n    width: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default observer(AffilieDashboard);","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieDashboard.tsx"],"names":["React","useContext","useEffect","useState","Grid","Input","AffilieList","observer","RootStoreContext","InfiniteScroll","AffilieListItemPlaceholder","AffilieDashboard","rootStore","loadAffilies","loadingInitial","setPage","page","totalPages","setCin","affilieStore","loadingNext","setLoadingNext","handleGetNext","then","load","event","key","field","document","createElement","setAttribute","body","appendChild","setTimeout","focus","e","target","value"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Input } from 'semantic-ui-react';\nimport AffilieList from './AffilieList';\nimport { observer } from 'mobx-react-lite';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport AffilieListItemPlaceholder from './AffilieListItemPlaceholder';\n\n\n\nconst AffilieDashboard: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadAffilies,\n    loadingInitial,\n    setPage,\n    page,\n    totalPages\n    , setCin\n  } = rootStore.affilieStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPage(page + 1);\n    loadAffilies().then(() => setLoadingNext(false));\n  };\n\n\n  useEffect(() => {\n    loadAffilies();\n  }, [loadAffilies]);\n\n  const load = (event: any) => {\n\n    if (event.key === \"Enter\") {\n      setLoadingNext(true);\n      setPage(0)\n      loadAffilies().then(() => setLoadingNext(false));\n\n      var field = document.createElement('input');\n      field.setAttribute('type', 'text');\n      document.body.appendChild(field);\n\n      setTimeout(function () {\n        field.focus();\n        setTimeout(function () {\n          field.setAttribute('style', 'display:none;');\n        }, 1);\n      }, 1);\n    }\n\n\n  }\n\n\n  return (\n\n\n    <Grid stackable columns={3}>\n      <Grid.Column width={4}>\n          <Input placeholder='Search...' onChange={(e) => setCin(e.target.value)} onKeyDown={(e: any) => load(e)} />\n      </Grid.Column>\n      <Grid.Column width={8}>\n\n\n        {loadingInitial && page === 0 ? (\n          <AffilieListItemPlaceholder />\n        ) : (\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={handleGetNext}\n              hasMore={!loadingNext && page + 1 < totalPages}\n              initialLoad={false}\n            >\n              <AffilieList />\n\n            </InfiniteScroll>\n\n          )}\n\n        {page > 0 ? (\n          <AffilieListItemPlaceholder />\n        ) : null}\n\n\n\n\n      </Grid.Column>\n\n      <Grid.Column width={4}>\n    \n         \n     \n      </Grid.Column>\n    </Grid>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  );\n};\n\nexport default observer(AffilieDashboard);\n"]},"metadata":{},"sourceType":"module"}