{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieListItem.tsx\";\nimport React from 'react';\nimport { Card, Image, Icon, Item } from 'semantic-ui-react';\nimport { format } from 'date-fns';\nimport { Link } from 'react-router-dom';\n\nconst AffilieListItem = ({\n  affilie\n}) => {\n  //const host = affilie.attendees.filter(x => x.isHost)[0];\n  return React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Image, {\n    src: \"https://react.semantic-ui.com/images/avatar/large/matthew.png\",\n    wrapped: true,\n    ui: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }), React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \" \", affilie.nom, \" \", affilie.prenom), React.createElement(Item.Description, {\n    as: Link,\n    to: \"/affilies/\".concat(affilie.cin),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, affilie.cin), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"map marker alternate\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), affilie.adresse)), React.createElement(Card.Content, {\n    extra: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, format(affilie.dateNaissance, 'EEEE d MMMM yyyy')))\n  /* \n  <Card.Group doubling itemsPerRow={3} stackable>\n  {_.map(cards, (card) => (\n    <Card key={card.header}>\n      {loading ? (\n        <Placeholder>\n          <Placeholder.Image square />\n        </Placeholder>\n      ) : (\n        <Image src={card.avatar} />\n      )}\n  \n      <Card.Content>\n        {loading ? (\n          <Placeholder>\n            <Placeholder.Header>\n              <Placeholder.Line length='very short' />\n              <Placeholder.Line length='medium' />\n            </Placeholder.Header>\n            <Placeholder.Paragraph>\n              <Placeholder.Line length='short' />\n            </Placeholder.Paragraph>\n          </Placeholder>\n        ) : (\n          <>\n            <Card.Header>{card.header}</Card.Header>\n            <Card.Meta>{card.date}</Card.Meta>\n            <Card.Description>{card.description}</Card.Description>\n          </>\n        )}\n      </Card.Content>\n  \n      <Card.Content extra>\n        <Button disabled={loading} primary>\n          Add\n        </Button>\n        <Button disabled={loading}>Delete</Button>\n      </Card.Content>\n    </Card>\n  ))}\n  </Card.Group> */\n  ;\n};\n\nexport default AffilieListItem;","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieListItem.tsx"],"names":["React","Card","Image","Icon","Item","format","Link","AffilieListItem","affilie","nom","prenom","cin","adresse","dateNaissance"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,EAAaC,KAAb,EAAoBC,IAApB,EAA0BC,IAA1B,QAAqC,mBAArC;AACA,SAAQC,MAAR,QAAqB,UAArB;AAKA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,eAAgD,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACxE;AACA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,+DAAX;AACC,IAAA,OAAO,MADR;AACS,IAAA,EAAE,EAAE,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAeA,OAAO,CAACC,GAAvB,OAA6BD,OAAO,CAACE,MAArC,CADA,EAEA,oBAAC,IAAD,CAAM,WAAN;AAAkB,IAAA,EAAE,EAAEJ,IAAtB;AAA4B,IAAA,EAAE,sBAAeE,OAAO,CAACG,GAAvB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACaH,OAAO,CAACG,GADrB,CAFA,EAKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALI,EAME,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,sBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEGH,OAAO,CAACI,OAFX,CANF,CAHA,EAcA,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECP,MAAM,CAACG,OAAO,CAACK,aAAT,EAAwB,kBAAxB,CAFP,CAdA;AAsBJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAvBE;AA2ED,CA7ED;;AA+EA,eAAeN,eAAf","sourcesContent":["import React from 'react';\nimport {Card,Image, Icon, Item} from 'semantic-ui-react';\nimport {format} from 'date-fns';\n\n\n\nimport { IAffilie } from '../../../app/models/affilie';\nimport { Link } from 'react-router-dom';\n\nconst AffilieListItem: React.FC<{ affilie: IAffilie }> = ({ affilie }) => {\n  //const host = affilie.attendees.filter(x => x.isHost)[0];\n  return (\n    <Card>\n    <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png'\n     wrapped ui={false} /> \n    <Card.Content>\n    <Card.Header> {affilie.nom} {affilie.prenom}</Card.Header>\n    <Item.Description as={Link} to={`/affilies/${affilie.cin}`}>\n                {affilie.cin}\n      </Item.Description>\n<br/>\n      <Card.Description>\n      <Icon name='map marker alternate' />\n        {affilie.adresse}\n      </Card.Description>\n    </Card.Content>\n    <Card.Content extra>\n    \n    {format(affilie.dateNaissance, 'EEEE d MMMM yyyy')} \n      \n    </Card.Content>\n    </Card>\n\n\n/* \n<Card.Group doubling itemsPerRow={3} stackable>\n{_.map(cards, (card) => (\n  <Card key={card.header}>\n    {loading ? (\n      <Placeholder>\n        <Placeholder.Image square />\n      </Placeholder>\n    ) : (\n      <Image src={card.avatar} />\n    )}\n\n    <Card.Content>\n      {loading ? (\n        <Placeholder>\n          <Placeholder.Header>\n            <Placeholder.Line length='very short' />\n            <Placeholder.Line length='medium' />\n          </Placeholder.Header>\n          <Placeholder.Paragraph>\n            <Placeholder.Line length='short' />\n          </Placeholder.Paragraph>\n        </Placeholder>\n      ) : (\n        <>\n          <Card.Header>{card.header}</Card.Header>\n          <Card.Meta>{card.date}</Card.Meta>\n          <Card.Description>{card.description}</Card.Description>\n        </>\n      )}\n    </Card.Content>\n\n    <Card.Content extra>\n      <Button disabled={loading} primary>\n        Add\n      </Button>\n      <Button disabled={loading}>Delete</Button>\n    </Card.Content>\n  </Card>\n))}\n</Card.Group> */\n\n\n\n    \n   \n      \n\n\n\n\n  );\n};\n\nexport default AffilieListItem;\n"]},"metadata":{},"sourceType":"module"}