{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/PDF/EtatQp.jsx\";\nimport React, { useRef, Props } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { IAffilie } from '../../../app/models/affilie'; //import  Pdf from 'react-to-pdf';\n//import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n//import ReactPDF from '@react-pdf/renderer';\n\nimport ReactToPrint, { useReactToPrint } from 'react-to-print';\nimport { Segment, Button } from 'semantic-ui-react';\n\nclass ComponentToPrint extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"column 1\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"column 2\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, \"column 3\")), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"data 1\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }\n    }, \"data 2\"), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"data 3\"))));\n  }\n\n}\n\nclass PdfQp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.componentRef = useRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactToPrint, {\n      trigger: () => {\n        // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\n        // to the root node of the returned component as it will be overwritten.\n        return /*#__PURE__*/React.createElement(\"a\", {\n          href: \"#\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 20\n          }\n        }, \"Print this out!\");\n      },\n      content: () => this.componentRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ComponentToPrint, {\n      ref: el => this.componentRef = el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default PdfQp;\n/*   const PdfQp:  React.FC<{affilie: IAffilie}> = ({affilie}) => {\n  \n    const componentRef = useRef();\n\n\n  return (\n\n    <Segment>\n      <ComponentToPrint ></ComponentToPrint>\n     <ReactToPrint\n        trigger={() => <button>Print this out!</button>}\n        content={():any => componentRef }\n      />\n    </Segment>\n\n \n\n  );\n\n\n};\n\nexport default observer(PdfQp); */","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/PDF/EtatQp.jsx"],"names":["React","useRef","Props","observer","IAffilie","ReactToPrint","useReactToPrint","Segment","Button","ComponentToPrint","Component","render","PdfQp","componentRef","el"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,KAAxB,QAAsC,OAAtC;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,6BAAzB,C,CACA;AACA;AACA;;AACA,OAAOC,YAAP,IAAuBC,eAAvB,QAA8C,gBAA9C;AAEA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,mBAAhC;;AAKA,MAAMC,gBAAN,SAA+BT,KAAK,CAACU,SAArC,CACA;AAEEC,EAAAA,MAAM,GAAG;AACP,wBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,CADF,CANA,CAFF;AAkBD;;AArBH;;AA0BA,MAAMC,KAAN,SAAoBZ,KAAK,CAACU,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAGjCG,YAHiC,GAGlBZ,MAAM,EAHY;AAAA;;AAIlCU,EAAAA,MAAM,GAAG;AAEP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AACE,MAAA,OAAO,EAAE,MAAM;AACb;AACA;AACA,4BAAO;AAAG,UAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AACD,OALH;AAME,MAAA,OAAO,EAAE,MAAM,KAAKE,YANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEC,EAAE,IAAK,KAAKD,YAAL,GAAoBC,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAaD;;AAnBiC;;AAsBpC,eAAeF,KAAf;AAEA","sourcesContent":["import React, { useRef, Props }  from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { IAffilie } from '../../../app/models/affilie';\n//import  Pdf from 'react-to-pdf';\n//import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n//import ReactPDF from '@react-pdf/renderer';\nimport ReactToPrint, { useReactToPrint}  from 'react-to-print'\n\nimport { Segment, Button } from 'semantic-ui-react';\n\n\n\n\nclass ComponentToPrint extends React.Component \n{\n\n  render() {\n    return (\n\n      <table>\n      <thead>\n        <th>column 1</th>\n        <th>column 2</th>\n        <th>column 3</th>\n      </thead>\n      <tbody>\n        <tr>\n          <td>data 1</td>\n          <td>data 2</td>\n          <td>data 3</td>\n        </tr>\n      </tbody>\n    </table>\n\n    );\n  }\n}\n\n\n\nclass PdfQp extends React.Component {\n  \n\n   componentRef = useRef()\n  render() {\n   \n    return (\n      <div>\n        <ReactToPrint\n          trigger={() => {\n            // NOTE: could just as easily return <SomeComponent />. Do NOT pass an `onClick` prop\n            // to the root node of the returned component as it will be overwritten.\n            return <a href=\"#\">Print this out!</a>;\n          }}\n          content={() => this.componentRef}\n        />\n        <ComponentToPrint ref={el => (this.componentRef = el)} />\n      </div>\n    );\n  }\n}\n\nexport default PdfQp;\n\n/*   const PdfQp:  React.FC<{affilie: IAffilie}> = ({affilie}) => {\n  \n    const componentRef = useRef();\n\n\n  return (\n\n    <Segment>\n      <ComponentToPrint ></ComponentToPrint>\n     <ReactToPrint\n        trigger={() => <button>Print this out!</button>}\n        content={():any => componentRef }\n      />\n    </Segment>\n\n \n\n  );\n\n\n};\n\nexport default observer(PdfQp); */\n"]},"metadata":{},"sourceType":"module"}