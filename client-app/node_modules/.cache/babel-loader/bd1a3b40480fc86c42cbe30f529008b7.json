{"ast":null,"code":"var _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/PDF/EtatQp.tsx\";\nimport React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { Button } from 'semantic-ui-react'; //import  Pdf from 'react-to-pdf';\n//import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n//import ReactPDF from '@react-pdf/renderer';\n\nconst createPdf = () => {\n  const PDFDocument = require('pdfkit');\n\n  const doc = new PDFDocument();\n  doc.pipe.fs.createWriteStream('output.pdf');\n  doc.font('fonts/PalatinoBold.ttf').fontSize(25).text('Some text with an embedded font!', 100, 100);\n  doc.image('path/to/image.png', {\n    fit: [250, 300],\n    align: 'center',\n    valign: 'center'\n  });\n  doc.addPage().fontSize(25).text('Here is some vector graphics...', 100, 100);\n  doc.save().moveTo(100, 150).lineTo(100, 250).lineTo(200, 250).fill(\"#FF3300\");\n  doc.scale(0.6).translate(470, -380).path('M 250,75 L 323,301 131,161 369,161 177,301 z').fill('red', 'even-odd').restore();\n  doc.addPage().fillColor(\"blue\").text('Here is a link!', 100, 100).underline(100, 100, 160, 27, \"#0000FF\").link(100, 100, 160, 27, 'http://google.com/');\n  doc.end();\n};\n\nconst PdfQp = ({\n  affilie\n}) => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => createPdf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }\n  }, \"print\"));\n};\n\nexport default observer(PdfQp);","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/PDF/EtatQp.tsx"],"names":["React","observer","Button","createPdf","PDFDocument","require","doc","pipe","fs","createWriteStream","font","fontSize","text","image","fit","align","valign","addPage","save","moveTo","lineTo","fill","scale","translate","path","restore","fillColor","underline","link","end","PdfQp","affilie"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,SAASC,MAAT,QAAuB,mBAAvB,C,CACA;AACA;AACA;;AAEA,MAAMC,SAAS,GAAC,MAChB;AAEE,QAAMC,WAAW,GAAGC,OAAO,CAAC,QAAD,CAA3B;;AACF,QAAMC,GAAG,GAAG,IAAIF,WAAJ,EAAZ;AAGAE,EAAAA,GAAG,CAACC,IAAJ,CAASC,EAAT,CAAYC,iBAAZ,CAA8B,YAA9B;AAGAH,EAAAA,GAAG,CAACI,IAAJ,CAAS,wBAAT,EACIC,QADJ,CACa,EADb,EAEIC,IAFJ,CAES,kCAFT,EAE6C,GAF7C,EAEkD,GAFlD;AAKAN,EAAAA,GAAG,CAACO,KAAJ,CAAU,mBAAV,EAA+B;AAC5BC,IAAAA,GAAG,EAAE,CAAC,GAAD,EAAM,GAAN,CADuB;AAE5BC,IAAAA,KAAK,EAAE,QAFqB;AAG5BC,IAAAA,MAAM,EAAE;AAHoB,GAA/B;AAOAV,EAAAA,GAAG,CAACW,OAAJ,GACIN,QADJ,CACa,EADb,EAEIC,IAFJ,CAES,iCAFT,EAE4C,GAF5C,EAEiD,GAFjD;AAKAN,EAAAA,GAAG,CAACY,IAAJ,GACIC,MADJ,CACW,GADX,EACgB,GADhB,EAEIC,MAFJ,CAEW,GAFX,EAEgB,GAFhB,EAGIA,MAHJ,CAGW,GAHX,EAGgB,GAHhB,EAIIC,IAJJ,CAIS,SAJT;AAMAf,EAAAA,GAAG,CAACgB,KAAJ,CAAU,GAAV,EACIC,SADJ,CACc,GADd,EACmB,CAAC,GADpB,EAEIC,IAFJ,CAES,8CAFT,EAGIH,IAHJ,CAGS,KAHT,EAGgB,UAHhB,EAIII,OAJJ;AAOAnB,EAAAA,GAAG,CAACW,OAAJ,GACIS,SADJ,CACc,MADd,EAEId,IAFJ,CAES,iBAFT,EAE4B,GAF5B,EAEiC,GAFjC,EAGIe,SAHJ,CAGc,GAHd,EAGmB,GAHnB,EAGwB,GAHxB,EAG6B,EAH7B,EAGiC,SAHjC,EAIIC,IAJJ,CAIS,GAJT,EAIc,GAJd,EAImB,GAJnB,EAIwB,EAJxB,EAI4B,oBAJ5B;AAOAtB,EAAAA,GAAG,CAACuB,GAAJ;AAEC,CAjDD;;AAoDE,MAAMC,KAAqC,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAI7D,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAI5B,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADC,CAFF;AAYD,CAhBC;;AAkBF,eAAeF,QAAQ,CAAC6B,KAAD,CAAvB","sourcesContent":["import React from 'react';\nimport { observer } from 'mobx-react-lite';\nimport { IAffilie } from '../../../app/models/affilie';\nimport { Button } from 'semantic-ui-react';\n//import  Pdf from 'react-to-pdf';\n//import { Page, Text, View, Document, StyleSheet } from '@react-pdf/renderer';\n//import ReactPDF from '@react-pdf/renderer';\n\nconst createPdf=()=>\n{\n\n  const PDFDocument = require('pdfkit');\nconst doc = new PDFDocument;\n\n\ndoc.pipe.fs.createWriteStream('output.pdf')\n \n\ndoc.font('fonts/PalatinoBold.ttf')\n   .fontSize(25)\n   .text('Some text with an embedded font!', 100, 100)\n \n\ndoc.image('path/to/image.png', {\n   fit: [250, 300],\n   align: 'center',\n   valign: 'center'\n});\n \n\ndoc.addPage()\n   .fontSize(25)\n   .text('Here is some vector graphics...', 100, 100)\n \n\ndoc.save()\n   .moveTo(100, 150)\n   .lineTo(100, 250)\n   .lineTo(200, 250)\n   .fill(\"#FF3300\")\n\ndoc.scale(0.6)\n   .translate(470, -380)\n   .path('M 250,75 L 323,301 131,161 369,161 177,301 z')\n   .fill('red', 'even-odd')\n   .restore()\n \n\ndoc.addPage()\n   .fillColor(\"blue\")\n   .text('Here is a link!', 100, 100)\n   .underline(100, 100, 160, 27, \"#0000FF\")\n   .link(100, 100, 160, 27, 'http://google.com/')\n \n\ndoc.end()\n\n}\n\n\n  const PdfQp:  React.FC<{affilie: IAffilie}> = ({affilie}) => {\n  \n\n\n  return (\n\n    <div>\n   <Button onClick={()=>createPdf}>print</Button>\n    </div>\n\n \n \n\n  );\n\n\n};\n\nexport default observer(PdfQp);\n"]},"metadata":{},"sourceType":"module"}