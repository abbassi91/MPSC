{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/testRedux/App/client-app/src/features/profiles/ProfilePage.tsx\";\nimport React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileContent from './ProfileContent';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { observer } from 'mobx-react-lite';\n\nconst ProfilePage = ({\n  match\n}) => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$profileSto = rootStore.profileStore,\n        loadingProfile = _rootStore$profileSto.loadingProfile,\n        profile = _rootStore$profileSto.profile,\n        loadProfile = _rootStore$profileSto.loadProfile,\n        follow = _rootStore$profileSto.follow,\n        unfollow = _rootStore$profileSto.unfollow,\n        isCurrentUser = _rootStore$profileSto.isCurrentUser,\n        loading = _rootStore$profileSto.loading,\n        setActiveTab = _rootStore$profileSto.setActiveTab;\n  useEffect(() => {\n    loadProfile(match.params.username);\n  }, [loadProfile, match]);\n  if (loadingProfile) return React.createElement(LoadingComponent, {\n    content: \"Loading profile...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  });\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 16,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(ProfileHeader, {\n    profile: profile,\n    isCurrentUser: isCurrentUser,\n    loading: loading,\n    follow: follow,\n    unfollow: unfollow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(ProfileContent, {\n    setActiveTab: setActiveTab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n};\n\nexport default observer(ProfilePage);","map":{"version":3,"sources":["/Users/mac/Desktop/testRedux/App/client-app/src/features/profiles/ProfilePage.tsx"],"names":["React","useContext","useEffect","Grid","ProfileHeader","ProfileContent","RootStoreContext","LoadingComponent","observer","ProfilePage","match","rootStore","profileStore","loadingProfile","profile","loadProfile","follow","unfollow","isCurrentUser","loading","setActiveTab","params","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,SAASC,gBAAT,QAAiC,4BAAjC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,SAASC,QAAT,QAAyB,iBAAzB;;AAQA,MAAMC,WAA6B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACnD,QAAMC,SAAS,GAAGV,UAAU,CAACK,gBAAD,CAA5B;AADmD,gCAW/CK,SAAS,CAACC,YAXqC;AAAA,QAGjDC,cAHiD,yBAGjDA,cAHiD;AAAA,QAIjDC,OAJiD,yBAIjDA,OAJiD;AAAA,QAKjDC,WALiD,yBAKjDA,WALiD;AAAA,QAMjDC,MANiD,yBAMjDA,MANiD;AAAA,QAOjDC,QAPiD,yBAOjDA,QAPiD;AAAA,QAQjDC,aARiD,yBAQjDA,aARiD;AAAA,QASjDC,OATiD,yBASjDA,OATiD;AAAA,QAUjDC,YAViD,yBAUjDA,YAViD;AAanDlB,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,WAAW,CAACL,KAAK,CAACW,MAAN,CAAaC,QAAd,CAAX;AACD,GAFQ,EAEN,CAACP,WAAD,EAAcL,KAAd,CAFM,CAAT;AAIA,MAAIG,cAAJ,EAAoB,OAAO,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEpB,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAEC,OADX;AAEE,IAAA,aAAa,EAAEI,aAFjB;AAGE,IAAA,OAAO,EAAEC,OAHX;AAIE,IAAA,MAAM,EAAEH,MAJV;AAKE,IAAA,QAAQ,EAAEC,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,cAAD;AAAgB,IAAA,YAAY,EAAEG,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF;AAcD,CAjCD;;AAmCA,eAAeZ,QAAQ,CAACC,WAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Grid } from 'semantic-ui-react';\nimport ProfileHeader from './ProfileHeader';\nimport ProfileContent from './ProfileContent';\nimport { RouteComponentProps } from 'react-router';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport LoadingComponent from '../../app/layout/LoadingComponent';\nimport { observer } from 'mobx-react-lite';\n\ninterface RouteParams {\n  username: string;\n}\n\ninterface IProps extends RouteComponentProps<RouteParams> {}\n\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadingProfile,\n    profile,\n    loadProfile,\n    follow,\n    unfollow,\n    isCurrentUser,\n    loading,\n    setActiveTab\n  } = rootStore.profileStore;\n\n  useEffect(() => {\n    loadProfile(match.params.username);\n  }, [loadProfile, match]);\n\n  if (loadingProfile) return <LoadingComponent content='Loading profile...' />;\n\n  return (\n    <Grid>\n      <Grid.Column width={16}>\n        <ProfileHeader\n          profile={profile!}\n          isCurrentUser={isCurrentUser}\n          loading={loading}\n          follow={follow}\n          unfollow={unfollow}\n        />\n        <ProfileContent setActiveTab={setActiveTab} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(ProfilePage);\n"]},"metadata":{},"sourceType":"module"}