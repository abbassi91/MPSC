{"ast":null,"code":"import _slicedToArray from \"/Users/abdelilah/Desktop/App/client-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieDashboard.tsx\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport { observer } from 'mobx-react-lite';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport AffilieFilters from './AffilieFilters';\nimport AffilieListItemPlaceholder from './AffilieListItemPlaceholder';\n\nconst AffilieDashboard = () => {\n  const rootStore = useContext(RootStoreContext);\n  const _rootStore$affilieSto = rootStore.affilieStore,\n        loadAffilies = _rootStore$affilieSto.loadAffilies,\n        loadingInitial = _rootStore$affilieSto.loadingInitial,\n        setPage = _rootStore$affilieSto.setPage,\n        page = _rootStore$affilieSto.page,\n        totalPages = _rootStore$affilieSto.totalPages;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        loadingNext = _useState2[0],\n        setLoadingNext = _useState2[1];\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPage(page + 1);\n    loadAffilies().then(() => setLoadingNext(false));\n  };\n\n  useEffect(() => {\n    loadAffilies();\n  }, [loadAffilies]);\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, loadingInitial && page === 0 ? React.createElement(AffilieListItemPlaceholder, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }) : React.createElement(InfiniteScroll, {\n    pageStart: 0,\n    loadMore: handleGetNext,\n    hasMore: !loadingNext && page + 1 < totalPages,\n    initialLoad: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(AffilieFilters, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Loader, {\n    active: loadingNext,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })));\n};\n\nexport default observer(AffilieDashboard);","map":{"version":3,"sources":["/Users/abdelilah/Desktop/App/client-app/src/features/affilies/dashboard/AffilieDashboard.tsx"],"names":["React","useContext","useEffect","useState","Grid","Loader","observer","RootStoreContext","InfiniteScroll","AffilieFilters","AffilieListItemPlaceholder","AffilieDashboard","rootStore","affilieStore","loadAffilies","loadingInitial","setPage","page","totalPages","loadingNext","setLoadingNext","handleGetNext","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AAEA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,gBAAT,QAAiC,+BAAjC;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;;AAEA,MAAMC,gBAA0B,GAAG,MAAM;AACvC,QAAMC,SAAS,GAAGX,UAAU,CAACM,gBAAD,CAA5B;AADuC,gCAQnCK,SAAS,CAACC,YARyB;AAAA,QAGrCC,YAHqC,yBAGrCA,YAHqC;AAAA,QAIrCC,cAJqC,yBAIrCA,cAJqC;AAAA,QAKrCC,OALqC,yBAKrCA,OALqC;AAAA,QAMrCC,IANqC,yBAMrCA,IANqC;AAAA,QAOrCC,UAPqC,yBAOrCA,UAPqC;;AAAA,oBASDf,QAAQ,CAAC,KAAD,CATP;AAAA;AAAA,QAShCgB,WATgC;AAAA,QASnBC,cATmB;;AAWvC,QAAMC,aAAa,GAAG,MAAM;AAC1BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACAJ,IAAAA,OAAO,CAACC,IAAI,GAAG,CAAR,CAAP;AACAH,IAAAA,YAAY,GAAGQ,IAAf,CAAoB,MAAMF,cAAc,CAAC,KAAD,CAAxC;AACD,GAJD;;AAMAlB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,YAAY;AACb,GAFQ,EAEN,CAACA,YAAD,CAFM,CAAT;AAIA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,cAAc,IAAIE,IAAI,KAAK,CAA3B,GACC,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAGC,oBAAC,cAAD;AACE,IAAA,SAAS,EAAE,CADb;AAEE,IAAA,QAAQ,EAAEI,aAFZ;AAGE,IAAA,OAAO,EAAE,CAACF,WAAD,IAAgBF,IAAI,GAAG,CAAP,GAAWC,UAHtC;AAIE,IAAA,WAAW,EAAE,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADF,EAeE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAfF,EAkBE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAlBF,CADF;AAwBD,CA7CD;;AA+CA,eAAeb,QAAQ,CAACK,gBAAD,CAAvB","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { Grid, Loader } from 'semantic-ui-react';\nimport AffilieList from './AffilieList';\nimport { observer } from 'mobx-react-lite';\nimport { RootStoreContext } from '../../../app/stores/rootStore';\nimport InfiniteScroll from 'react-infinite-scroller';\nimport AffilieFilters from './AffilieFilters';\nimport AffilieListItemPlaceholder from './AffilieListItemPlaceholder';\n\nconst AffilieDashboard: React.FC = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    loadAffilies,\n    loadingInitial,\n    setPage,\n    page,\n    totalPages\n  } = rootStore.affilieStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  const handleGetNext = () => {\n    setLoadingNext(true);\n    setPage(page + 1);\n    loadAffilies().then(() => setLoadingNext(false));\n  };\n\n  useEffect(() => {\n    loadAffilies();\n  }, [loadAffilies]);\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        {loadingInitial && page === 0 ? (\n          <AffilieListItemPlaceholder />\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={!loadingNext && page + 1 < totalPages}\n            initialLoad={false}\n          >\n          \n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <AffilieFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default observer(AffilieDashboard);\n"]},"metadata":{},"sourceType":"module"}