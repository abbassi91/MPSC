{"ast":null,"code":"import _objectSpread from \"/Users/mac/Desktop/testRedux/App/client-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _initializerDefineProperty from \"/Users/mac/Desktop/testRedux/App/client-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/mac/Desktop/testRedux/App/client-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/mac/Desktop/testRedux/App/client-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _temp;\n\nimport { observable, action, runInAction, computed, reaction } from 'mobx';\nimport agent from '../api/agent';\nimport { toast } from 'react-toastify';\nlet ProfileStore = (_class = (_temp = class ProfileStore {\n  constructor(rootStore) {\n    this.rootStore = void 0;\n\n    _initializerDefineProperty(this, \"profile\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"loadingProfile\", _descriptor2, this);\n\n    _initializerDefineProperty(this, \"uploadingPhoto\", _descriptor3, this);\n\n    _initializerDefineProperty(this, \"loading\", _descriptor4, this);\n\n    _initializerDefineProperty(this, \"followings\", _descriptor5, this);\n\n    _initializerDefineProperty(this, \"activeTab\", _descriptor6, this);\n\n    _initializerDefineProperty(this, \"userActivities\", _descriptor7, this);\n\n    _initializerDefineProperty(this, \"loadingActivities\", _descriptor8, this);\n\n    _initializerDefineProperty(this, \"loadUserActivities\", _descriptor9, this);\n\n    _initializerDefineProperty(this, \"setActiveTab\", _descriptor10, this);\n\n    _initializerDefineProperty(this, \"loadProfile\", _descriptor11, this);\n\n    _initializerDefineProperty(this, \"uploadPhoto\", _descriptor12, this);\n\n    _initializerDefineProperty(this, \"setMainPhoto\", _descriptor13, this);\n\n    _initializerDefineProperty(this, \"deletePhoto\", _descriptor14, this);\n\n    _initializerDefineProperty(this, \"updateProfile\", _descriptor15, this);\n\n    _initializerDefineProperty(this, \"follow\", _descriptor16, this);\n\n    _initializerDefineProperty(this, \"unfollow\", _descriptor17, this);\n\n    _initializerDefineProperty(this, \"loadFollowings\", _descriptor18, this);\n\n    this.rootStore = rootStore;\n    reaction(() => this.activeTab, activeTab => {\n      if (activeTab === 3 || activeTab === 4) {\n        const predicate = activeTab === 3 ? 'followers' : 'following';\n        this.loadFollowings(predicate);\n      } else {\n        this.followings = [];\n      }\n    });\n  }\n\n  get isCurrentUser() {\n    if (this.rootStore.userStore.user && this.profile) {\n      return this.rootStore.userStore.user.username === this.profile.username;\n    } else {\n      return false;\n    }\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"profile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return null;\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"loadingProfile\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return true;\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class.prototype, \"uploadingPhoto\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class.prototype, \"followings\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class.prototype, \"activeTab\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class.prototype, \"userActivities\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class.prototype, \"loadingActivities\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"isCurrentUser\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"isCurrentUser\"), _class.prototype), _descriptor9 = _applyDecoratedDescriptor(_class.prototype, \"loadUserActivities\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async (username, predicate) => {\n      this.loadingActivities = true;\n\n      try {\n        const activities = await agent.Profiles.listActivities(username, predicate);\n        runInAction(() => {\n          this.userActivities = activities;\n          this.loadingActivities = false;\n        });\n      } catch (error) {\n        toast.error('Problem loading activities');\n        runInAction(() => {\n          this.loadingActivities = false;\n        });\n      }\n    };\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class.prototype, \"setActiveTab\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return activeIndex => {\n      this.activeTab = activeIndex;\n    };\n  }\n}), _descriptor11 = _applyDecoratedDescriptor(_class.prototype, \"loadProfile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async username => {\n      this.loadingProfile = true;\n\n      try {\n        const profile = await agent.Profiles.get(username);\n        runInAction(() => {\n          this.profile = profile;\n          this.loadingProfile = false;\n        });\n      } catch (error) {\n        runInAction(() => {\n          this.loadingProfile = false;\n        });\n        console.log(error);\n      }\n    };\n  }\n}), _descriptor12 = _applyDecoratedDescriptor(_class.prototype, \"uploadPhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async file => {\n      this.uploadingPhoto = true;\n\n      try {\n        const photo = await agent.Profiles.uploadPhoto(file);\n        runInAction(() => {\n          if (this.profile) {\n            this.profile.photos.push(photo);\n\n            if (photo.isMain && this.rootStore.userStore.user) {\n              this.rootStore.userStore.user.image = photo.url;\n              this.profile.image = photo.url;\n            }\n          }\n\n          this.uploadingPhoto = false;\n        });\n      } catch (error) {\n        console.log(error);\n        toast.error('Problem uploading photo');\n        runInAction(() => {\n          this.uploadingPhoto = false;\n        });\n      }\n    };\n  }\n}), _descriptor13 = _applyDecoratedDescriptor(_class.prototype, \"setMainPhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async photo => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.setMainPhoto(photo.id);\n        runInAction(() => {\n          this.rootStore.userStore.user.image = photo.url;\n          this.profile.photos.find(a => a.isMain).isMain = false;\n          this.profile.photos.find(a => a.id === photo.id).isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem setting photo as main');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor14 = _applyDecoratedDescriptor(_class.prototype, \"deletePhoto\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async photo => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.deletePhoto(photo.id);\n        runInAction(() => {\n          this.profile.photos = this.profile.photos.filter(a => a.id !== photo.id);\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem deleting the photo');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor15 = _applyDecoratedDescriptor(_class.prototype, \"updateProfile\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async profile => {\n      try {\n        await agent.Profiles.updateProfile(profile);\n        runInAction(() => {\n          if (profile.displayName !== this.rootStore.userStore.user.displayName) {\n            this.rootStore.userStore.user.displayName = profile.displayName;\n          }\n\n          this.profile = _objectSpread({}, this.profile, profile);\n        });\n      } catch (error) {\n        toast.error('Problem updating profile');\n      }\n    };\n  }\n}), _descriptor16 = _applyDecoratedDescriptor(_class.prototype, \"follow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async username => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.follow(username);\n        runInAction(() => {\n          this.profile.following = true;\n          this.profile.followersCount++;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem following user');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor17 = _applyDecoratedDescriptor(_class.prototype, \"unfollow\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async username => {\n      this.loading = true;\n\n      try {\n        await agent.Profiles.unfollow(username);\n        runInAction(() => {\n          this.profile.following = false;\n          this.profile.followersCount--;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem unfollowing user');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n}), _descriptor18 = _applyDecoratedDescriptor(_class.prototype, \"loadFollowings\", [action], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return async predicate => {\n      this.loading = true;\n\n      try {\n        const profiles = await agent.Profiles.listFollowings(this.profile.username, predicate);\n        runInAction(() => {\n          this.followings = profiles;\n          this.loading = false;\n        });\n      } catch (error) {\n        toast.error('Problem loading followings');\n        runInAction(() => {\n          this.loading = false;\n        });\n      }\n    };\n  }\n})), _class);\nexport { ProfileStore as default };","map":{"version":3,"sources":["/Users/mac/Desktop/testRedux/App/client-app/src/app/stores/profileStore.ts"],"names":["observable","action","runInAction","computed","reaction","agent","toast","ProfileStore","constructor","rootStore","activeTab","predicate","loadFollowings","followings","isCurrentUser","userStore","user","profile","username","loadingActivities","activities","Profiles","listActivities","userActivities","error","activeIndex","loadingProfile","get","console","log","file","uploadingPhoto","photo","uploadPhoto","photos","push","isMain","image","url","loading","setMainPhoto","id","find","a","deletePhoto","filter","updateProfile","displayName","follow","following","followersCount","unfollow","profiles","listFollowings"],"mappings":"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","sourcesContent":["import { RootStore } from './rootStore';\nimport { observable, action, runInAction, computed, reaction } from 'mobx';\nimport { IProfile, IPhoto, IUserActivity } from '../models/profile';\nimport agent from '../api/agent';\nimport { toast } from 'react-toastify';\n\nexport default class ProfileStore {\n  rootStore: RootStore;\n  constructor(rootStore: RootStore) {\n    this.rootStore = rootStore;\n\n    reaction(\n        () => this.activeTab,\n        activeTab => {\n            if (activeTab === 3 || activeTab === 4) {\n                const predicate = activeTab === 3 ? 'followers' : 'following';\n                this.loadFollowings(predicate)\n            } else {\n                this.followings = [];\n            }\n        }\n    )\n  }\n\n  @observable profile: IProfile | null = null;\n  @observable loadingProfile = true;\n  @observable uploadingPhoto = false;\n  @observable loading = false;\n  @observable followings: IProfile[] = [];\n  @observable activeTab: number = 0;\n  @observable userActivities: IUserActivity[] = [];\n  @observable loadingActivities = false;\n\n  @computed get isCurrentUser() {\n    if (this.rootStore.userStore.user && this.profile) {\n      return this.rootStore.userStore.user.username === this.profile.username;\n    } else {\n      return false;\n    }\n  }\n\n  @action loadUserActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(username, predicate!);\n      runInAction(() => {\n        this.userActivities = activities;\n        this.loadingActivities = false;\n      })\n    } catch (error) {\n      toast.error('Problem loading activities')\n      runInAction(() => {\n        this.loadingActivities = false;\n      })\n    }\n  }\n\n  @action setActiveTab = (activeIndex: number) => {\n      this.activeTab = activeIndex;\n  } \n\n  @action loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      const profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      runInAction(() => {\n        this.loadingProfile = false;\n      });\n      console.log(error);\n    }\n  };\n\n  @action uploadPhoto = async (file: Blob) => {\n    this.uploadingPhoto = true;\n    try {\n      const photo = await agent.Profiles.uploadPhoto(file);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos.push(photo);\n          if (photo.isMain && this.rootStore.userStore.user) {\n            this.rootStore.userStore.user.image = photo.url;\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploadingPhoto = false;\n      });\n    } catch (error) {\n      console.log(error);\n      toast.error('Problem uploading photo');\n      runInAction(() => {\n        this.uploadingPhoto = false;\n      });\n    }\n  };\n\n  @action setMainPhoto = async (photo: IPhoto) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      runInAction(() => {\n        this.rootStore.userStore.user!.image = photo.url;\n        this.profile!.photos.find(a => a.isMain)!.isMain = false;\n        this.profile!.photos.find(a => a.id === photo.id)!.isMain = true;\n        this.profile!.image = photo.url;\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem setting photo as main');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action deletePhoto = async (photo: IPhoto) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        this.profile!.photos = this.profile!.photos.filter(\n          a => a.id !== photo.id\n        );\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem deleting the photo');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action updateProfile = async (profile: Partial<IProfile>) => {\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (\n          profile.displayName !== this.rootStore.userStore.user!.displayName\n        ) {\n          this.rootStore.userStore.user!.displayName = profile.displayName!;\n        }\n        this.profile = { ...this.profile!, ...profile };\n      });\n    } catch (error) {\n      toast.error('Problem updating profile');\n    }\n  };\n\n  @action follow = async (username: string) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.follow(username);\n      runInAction(() => {\n        this.profile!.following = true;\n        this.profile!.followersCount++;\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem following user');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action unfollow = async (username: string) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.unfollow(username);\n      runInAction(() => {\n        this.profile!.following = false;\n        this.profile!.followersCount--;\n        this.loading = false;\n      });\n    } catch (error) {\n      toast.error('Problem unfollowing user');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  @action loadFollowings = async (predicate: string) => {\n    this.loading = true;\n    try {\n      const profiles = await agent.Profiles.listFollowings(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n          this.followings = profiles;\n          this.loading = false;\n      })\n    } catch (error) {\n      toast.error('Problem loading followings');\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}